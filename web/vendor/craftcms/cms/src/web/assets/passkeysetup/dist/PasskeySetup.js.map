{"version":3,"file":"PasskeySetup.js","mappings":"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","sources":["webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/bufferToBase64URLString.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/base64URLStringToBuffer.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/browserSupportsWebAuthn.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/toPublicKeyCredentialDescriptor.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/webAuthnError.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/webAuthnAbortService.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/toAuthenticatorAttachment.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/methods/startRegistration.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/identifyRegistrationError.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/isValidDomain.js","webpack:///./PasskeySetup.js","webpack:///../../../../../node_modules/@simplewebauthn/browser/esm/helpers/platformAuthenticatorIsAvailable.js"],"sourcesContent":["/**\n * Convert the given array buffer into a Base64URL-encoded string. Ideal for converting various\n * credential response ArrayBuffers to string for sending back to the server as JSON.\n *\n * Helper method to compliment `base64URLStringToBuffer`\n */\nexport function bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n","/**\n * Convert from a Base64URL-encoded string to an Array Buffer. Best used when converting a\n * credential ID from a JSON string to an ArrayBuffer, like in allowCredentials or\n * excludeCredentials\n *\n * Helper method to compliment `bufferToBase64URLString`\n */\nexport function base64URLStringToBuffer(base64URLString) {\n    // Convert from Base64URL to Base64\n    const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n    /**\n     * Pad with '=' until it's a multiple of four\n     * (4 - (85 % 4 = 1) = 3) % 4 = 3 padding\n     * (4 - (86 % 4 = 2) = 2) % 4 = 2 padding\n     * (4 - (87 % 4 = 3) = 1) % 4 = 1 padding\n     * (4 - (88 % 4 = 0) = 4) % 4 = 0 padding\n     */\n    const padLength = (4 - (base64.length % 4)) % 4;\n    const padded = base64.padEnd(base64.length + padLength, '=');\n    // Convert to a binary string\n    const binary = atob(padded);\n    // Convert binary string to buffer\n    const buffer = new ArrayBuffer(binary.length);\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n}\n","/**\n * Determine if the browser is capable of Webauthn\n */\nexport function browserSupportsWebAuthn() {\n    return _browserSupportsWebAuthnInternals.stubThis(globalThis?.PublicKeyCredential !== undefined &&\n        typeof globalThis.PublicKeyCredential === 'function');\n}\n/**\n * Make it possible to stub the return value during testing\n * @ignore Don't include this in docs output\n */\nexport const _browserSupportsWebAuthnInternals = {\n    stubThis: (value) => value,\n};\n","import { base64URLStringToBuffer } from './base64URLStringToBuffer.js';\nexport function toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        /**\n         * `descriptor.transports` is an array of our `AuthenticatorTransportFuture` that includes newer\n         * transports that TypeScript's DOM lib is ignorant of. Convince TS that our list of transports\n         * are fine to pass to WebAuthn since browsers will recognize the new value.\n         */\n        transports: descriptor.transports,\n    };\n}\n","/**\n * A custom Error used to return a more nuanced error detailing _why_ one of the eight documented\n * errors in the spec was raised after calling `navigator.credentials.create()` or\n * `navigator.credentials.get()`:\n *\n * - `AbortError`\n * - `ConstraintError`\n * - `InvalidStateError`\n * - `NotAllowedError`\n * - `NotSupportedError`\n * - `SecurityError`\n * - `TypeError`\n * - `UnknownError`\n *\n * Error messages were determined through investigation of the spec to determine under which\n * scenarios a given error would be raised.\n */\nexport class WebAuthnError extends Error {\n    constructor({ message, code, cause, name, }) {\n        // @ts-ignore: help Rollup understand that `cause` is okay to set\n        super(message, { cause });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name ?? cause.name;\n        this.code = code;\n    }\n}\n","class BaseWebAuthnAbortService {\n    constructor() {\n        Object.defineProperty(this, \"controller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    createNewAbortSignal() {\n        // Abort any existing calls to navigator.credentials.create() or navigator.credentials.get()\n        if (this.controller) {\n            const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n        }\n        const newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n    }\n    cancelCeremony() {\n        if (this.controller) {\n            const abortError = new Error('Manually cancelling existing WebAuthn API call');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n            this.controller = undefined;\n        }\n    }\n}\n/**\n * A service singleton to help ensure that only a single WebAuthn ceremony is active at a time.\n *\n * Users of **@simplewebauthn/browser** shouldn't typically need to use this, but it can help e.g.\n * developers building projects that use client-side routing to better control the behavior of\n * their UX in response to router navigation events.\n */\nexport const WebAuthnAbortService = new BaseWebAuthnAbortService();\n","const attachments = ['cross-platform', 'platform'];\n/**\n * If possible coerce a `string` value into a known `AuthenticatorAttachment`\n */\nexport function toAuthenticatorAttachment(attachment) {\n    if (!attachment) {\n        return;\n    }\n    if (attachments.indexOf(attachment) < 0) {\n        return;\n    }\n    return attachment;\n}\n","import { bufferToBase64URLString } from '../helpers/bufferToBase64URLString.js';\nimport { base64URLStringToBuffer } from '../helpers/base64URLStringToBuffer.js';\nimport { browserSupportsWebAuthn } from '../helpers/browserSupportsWebAuthn.js';\nimport { toPublicKeyCredentialDescriptor } from '../helpers/toPublicKeyCredentialDescriptor.js';\nimport { identifyRegistrationError } from '../helpers/identifyRegistrationError.js';\nimport { WebAuthnAbortService } from '../helpers/webAuthnAbortService.js';\nimport { toAuthenticatorAttachment } from '../helpers/toAuthenticatorAttachment.js';\n/**\n * Begin authenticator \"registration\" via WebAuthn attestation\n *\n * @param optionsJSON Output from **@simplewebauthn/server**'s `generateRegistrationOptions()`\n * @param useAutoRegister (Optional) Try to silently create a passkey with the password manager that the user just signed in with. Defaults to `false`.\n */\nexport async function startRegistration(options) {\n    // @ts-ignore: Intentionally check for old call structure to warn about improper API call\n    if (!options.optionsJSON && options.challenge) {\n        console.warn('startRegistration() was not called correctly. It will try to continue with the provided options, but this call should be refactored to use the expected call structure instead. See https://simplewebauthn.dev/docs/packages/browser#typeerror-cannot-read-properties-of-undefined-reading-challenge for more information.');\n        // @ts-ignore: Reassign the options, passed in as a positional argument, to the expected variable\n        options = { optionsJSON: options };\n    }\n    const { optionsJSON, useAutoRegister = false } = options;\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    // We need to convert some values to Uint8Arrays before passing the credentials to the navigator\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        user: {\n            ...optionsJSON.user,\n            id: base64URLStringToBuffer(optionsJSON.user.id),\n        },\n        excludeCredentials: optionsJSON.excludeCredentials?.map(toPublicKeyCredentialDescriptor),\n    };\n    // Prepare options for `.create()`\n    const createOptions = {};\n    /**\n     * Try to use conditional create to register a passkey for the user with the password manager\n     * the user just used to authenticate with. The user won't be shown any prominent UI by the\n     * browser.\n     */\n    if (useAutoRegister) {\n        // @ts-ignore: `mediation` doesn't yet exist on CredentialCreationOptions but it's possible as of Sept 2024\n        createOptions.mediation = 'conditional';\n    }\n    // Finalize options\n    createOptions.publicKey = publicKey;\n    // Set up the ability to cancel this request if the user attempts another\n    createOptions.signal = WebAuthnAbortService.createNewAbortSignal();\n    // Wait for the user to complete attestation\n    let credential;\n    try {\n        credential = (await navigator.credentials.create(createOptions));\n    }\n    catch (err) {\n        throw identifyRegistrationError({ error: err, options: createOptions });\n    }\n    if (!credential) {\n        throw new Error('Registration was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    // Continue to play it safe with `getTransports()` for now, even when L3 types say it's required\n    let transports = undefined;\n    if (typeof response.getTransports === 'function') {\n        transports = response.getTransports();\n    }\n    // L3 says this is required, but browser and webview support are still not guaranteed.\n    let responsePublicKeyAlgorithm = undefined;\n    if (typeof response.getPublicKeyAlgorithm === 'function') {\n        try {\n            responsePublicKeyAlgorithm = response.getPublicKeyAlgorithm();\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKeyAlgorithm()', error);\n        }\n    }\n    let responsePublicKey = undefined;\n    if (typeof response.getPublicKey === 'function') {\n        try {\n            const _publicKey = response.getPublicKey();\n            if (_publicKey !== null) {\n                responsePublicKey = bufferToBase64URLString(_publicKey);\n            }\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKey()', error);\n        }\n    }\n    // L3 says this is required, but browser and webview support are still not guaranteed.\n    let responseAuthenticatorData;\n    if (typeof response.getAuthenticatorData === 'function') {\n        try {\n            responseAuthenticatorData = bufferToBase64URLString(response.getAuthenticatorData());\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getAuthenticatorData()', error);\n        }\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            attestationObject: bufferToBase64URLString(response.attestationObject),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            transports,\n            publicKeyAlgorithm: responsePublicKeyAlgorithm,\n            publicKey: responsePublicKey,\n            authenticatorData: responseAuthenticatorData,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n/**\n * Visibly warn when we detect an issue related to a passkey provider intercepting WebAuthn API\n * calls\n */\nfunction warnOnBrokenImplementation(methodName, cause) {\n    console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${methodName}. You should report this error to them.\\n`, cause);\n}\n","import { isValidDomain } from './isValidDomain.js';\nimport { WebAuthnError } from './webAuthnError.js';\n/**\n * Attempt to intuit _why_ an error was raised after calling `navigator.credentials.create()`\n */\nexport function identifyRegistrationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 16)\n            return new WebAuthnError({\n                message: 'Registration ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'ConstraintError') {\n        if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n            // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 4)\n            return new WebAuthnError({\n                message: 'Discoverable credentials were required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n                cause: error,\n            });\n        }\n        else if (\n        // @ts-ignore: `mediation` doesn't yet exist on CredentialCreationOptions but it's possible as of Sept 2024\n        options.mediation === 'conditional' &&\n            publicKey.authenticatorSelection?.userVerification === 'required') {\n            // https://w3c.github.io/webauthn/#sctn-createCredential (Step 22.4)\n            return new WebAuthnError({\n                message: 'User verification was required during automatic registration but it could not be performed',\n                code: 'ERROR_AUTO_REGISTER_USER_VERIFICATION_FAILURE',\n                cause: error,\n            });\n        }\n        else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n            // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 5)\n            return new WebAuthnError({\n                message: 'User verification was required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'InvalidStateError') {\n        // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 20)\n        // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 3)\n        return new WebAuthnError({\n            message: 'The authenticator was previously registered',\n            code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotAllowedError') {\n        /**\n         * Pass the error directly through. Platforms are overloading this error beyond what the spec\n         * defines and we don't want to overwrite potentially useful error messages.\n         */\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotSupportedError') {\n        const validPubKeyCredParams = publicKey.pubKeyCredParams.filter((param) => param.type === 'public-key');\n        if (validPubKeyCredParams.length === 0) {\n            // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 10)\n            return new WebAuthnError({\n                message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n                code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n                cause: error,\n            });\n        }\n        // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 2)\n        return new WebAuthnError({\n            message: 'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n            code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = globalThis.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 7)\n            return new WebAuthnError({\n                message: `${globalThis.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rp.id !== effectiveDomain) {\n            // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 8)\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'TypeError') {\n        if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n            // https://www.w3.org/TR/webauthn-2/#sctn-createCredential (Step 5)\n            return new WebAuthnError({\n                message: 'User ID was not between 1 and 64 characters',\n                code: 'ERROR_INVALID_USER_ID_LENGTH',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 1)\n        // https://www.w3.org/TR/webauthn-2/#sctn-op-make-cred (Step 8)\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new credential',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n","/**\n * A simple test to determine if a hostname is a properly-formatted domain name\n *\n * A \"valid domain\" is defined here: https://url.spec.whatwg.org/#valid-domain\n *\n * Regex sourced from here:\n * https://www.oreilly.com/library/view/regular-expressions-cookbook/9781449327453/ch08s15.html\n */\nexport function isValidDomain(hostname) {\n    return (\n    // Consider localhost valid as well since it's okay wrt Secure Contexts\n    hostname === 'localhost' ||\n        /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname));\n}\n","import {\n  browserSupportsWebAuthn,\n  platformAuthenticatorIsAvailable,\n} from '@simplewebauthn/browser';\nimport {startRegistration} from '@simplewebauthn/browser';\n\n/** global: Craft */\n/** global: Garnish */\nCraft.PasskeySetup = Garnish.Base.extend({\n  $passkeysTable: null,\n  $addPasskeyBtn: null,\n  $errors: null,\n\n  async init() {\n    this.$passkeysTable = $('#passkeys');\n    this.$addPasskeyBtn = $('#add-passkey-btn');\n    this.$errors = $('#passkey-errors');\n\n    if (\n      !browserSupportsWebAuthn() ||\n      !(await platformAuthenticatorIsAvailable())\n    ) {\n      const $container = $('<div class=\"readable\"/>');\n      $('<blockquote/>', {\n        class: 'note warning',\n        text: Craft.t('app', 'This browser doesn’t support passkeys.'),\n      }).appendTo($container);\n      this.$addPasskeyBtn.replaceWith($container);\n      return;\n    }\n\n    this.initTable();\n    this.addListener(this.$addPasskeyBtn, 'activate', 'createPasskey');\n  },\n\n  initTable() {\n    this.addListener(this.$passkeysTable.find('.delete'), 'activate', (ev) => {\n      ev.preventDefault();\n      const $button = $(ev.currentTarget);\n      this.deletePasskey($button.data('uid'), $button.data('name'));\n    });\n  },\n\n  updateTable(html) {\n    this.$passkeysTable.html(html);\n    this.initTable();\n  },\n\n  async createPasskey() {\n    if (this.$addPasskeyBtn.hasClass('loading')) {\n      return;\n    }\n\n    this.$addPasskeyBtn.addClass('loading');\n    Craft.cp.announce(Craft.t('app', 'Loading'));\n\n    try {\n      await (() =>\n        new Promise((resolve, reject) => {\n          try {\n            Craft.elevatedSessionManager.requireElevatedSession(\n              async () => {\n                await this.startRegistration();\n                resolve();\n              },\n              () => {\n                resolve();\n              },\n              Math.min(Craft.elevatedSessionDuration, 300)\n            );\n          } catch (e) {\n            reject(e);\n          }\n        }))();\n    } finally {\n      this.$addPasskeyBtn.removeClass('loading');\n    }\n  },\n\n  async startRegistration() {\n    // GET registration options from the endpoint that calls\n    let data;\n    try {\n      const response = await Craft.sendActionRequest(\n        'POST',\n        'auth/passkey-creation-options'\n      );\n      data = response.data;\n    } catch (e) {\n      Craft.cp.displayError(e?.response?.data?.message);\n      return;\n    }\n\n    let defaultName = this.browserName() + ' on ' + this.platformName();\n    const credentialName = prompt(\n      Craft.t('app', 'Enter a name for the passkey.'),\n      defaultName\n    );\n\n    if (credentialName === null) {\n      return;\n    }\n\n    let regResponse;\n\n    try {\n      regResponse = await startRegistration(data.options);\n    } catch (e) {\n      Craft.cp.displayError(e?.message);\n      return;\n    }\n\n    this.verifyRegistration(regResponse, credentialName);\n  },\n\n  async verifyRegistration(startRegistrationResponse, credentialName) {\n    let data;\n\n    try {\n      const response = await Craft.sendActionRequest(\n        'POST',\n        'auth/verify-passkey-creation',\n        {\n          data: {\n            credentials: JSON.stringify(startRegistrationResponse),\n            credentialName: credentialName,\n          },\n        }\n      );\n      data = response.data;\n    } catch (e) {\n      Craft.cp.displayError(e?.response?.data?.message);\n      return;\n    }\n\n    Craft.cp.displaySuccess(data.message);\n    this.updateTable(data.tableHtml);\n  },\n\n  async deletePasskey(uid, name) {\n    if (\n      !confirm(\n        Craft.t(\n          'app',\n          'Are you sure you want to delete the “{name}” passkey?',\n          {name}\n        )\n      )\n    ) {\n      return;\n    }\n\n    let data;\n\n    try {\n      const response = await Craft.sendActionRequest(\n        'POST',\n        'auth/delete-passkey',\n        {\n          data: {uid},\n        }\n      );\n      data = response.data;\n    } catch (e) {\n      Craft.cp.displayError(e?.response?.data?.message);\n      return;\n    }\n\n    Craft.cp.displaySuccess(data.message);\n    this.updateTable(data.tableHtml);\n  },\n\n  platformName() {\n    const platform = navigator.platform;\n\n    if (platform.indexOf('Mac') !== -1) {\n      return 'Mac';\n    }\n    if (platform.indexOf('iPhone') !== -1 || platform.indexOf('Pike')) {\n      return 'iPhone';\n    }\n    if (platform.indexOf('iPad') !== -1) {\n      return 'iPad';\n    }\n    if (platform.indexOf('iPod') !== -1) {\n      return 'iPod';\n    }\n    if (platform.indexOf('FreeBSD') !== -1) {\n      return 'FreeBSD';\n    }\n    if (platform.indexOf('Linux') !== -1) {\n      return 'Linux';\n    }\n    if (platform.indexOf('Win') !== -1) {\n      return 'Windows';\n    }\n    if (platform.indexOf('Nintendo') !== -1) {\n      return 'Nintendo';\n    }\n    if (platform.indexOf('SunOS') !== -1) {\n      return 'Solaris';\n    }\n    // in other cases - just use the full name returned by navigator.platform\n    return platform;\n  },\n\n  browserName() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/chrome|chromium|crios/i)) {\n      return 'Chrome';\n    }\n    if (userAgent.match(/firefox|fxios/i)) {\n      return 'Firefox';\n    }\n    if (userAgent.match(/safari/i)) {\n      return 'Safari';\n    }\n    if (userAgent.match(/opr\\//i)) {\n      return 'Opera';\n    }\n    if (userAgent.match(/edg/i)) {\n      return 'Edge';\n    }\n    if (userAgent.match(/trident/i)) {\n      return 'IE';\n    }\n    return 'Browser';\n  },\n});\n","import { browserSupportsWebAuthn } from './browserSupportsWebAuthn.js';\n/**\n * Determine whether the browser can communicate with a built-in authenticator, like\n * Touch ID, Android fingerprint scanner, or Windows Hello.\n *\n * This method will _not_ be able to tell you the name of the platform authenticator.\n */\nexport function platformAuthenticatorIsAvailable() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n"],"names":["buffer","bytes","Uint8Array","str","charCode","String","fromCharCode","btoa","replace","base64URLString","base64","padLength","length","padded","padEnd","binary","atob","ArrayBuffer","i","charCodeAt","_browserSupportsWebAuthnInternals","stubThis","undefined","globalThis","PublicKeyCredential","value","descriptor","id","transports","WebAuthnError","Error","constructor","message","code","cause","name","super","Object","defineProperty","this","enumerable","configurable","writable","createNewAbortSignal","controller","abortError","abort","newController","AbortController","signal","cancelCeremony","attachments","attachment","indexOf","async","options","optionsJSON","challenge","console","warn","useAutoRegister","publicKey","user","excludeCredentials","map","createOptions","credential","mediation","navigator","credentials","create","err","error","AbortSignal","authenticatorSelection","requireResidentKey","userVerification","pubKeyCredParams","filter","param","type","effectiveDomain","location","hostname","test","rp","byteLength","identifyRegistrationError","rawId","response","responsePublicKeyAlgorithm","responsePublicKey","responseAuthenticatorData","getTransports","getPublicKeyAlgorithm","warnOnBrokenImplementation","getPublicKey","_publicKey","getAuthenticatorData","attestationObject","clientDataJSON","publicKeyAlgorithm","authenticatorData","clientExtensionResults","getClientExtensionResults","authenticatorAttachment","methodName","_regeneratorRuntime","e","t","r","prototype","n","hasOwnProperty","o","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","_asyncToGenerator","fn","self","args","arguments","apply","Craft","PasskeySetup","Garnish","Base","extend","$passkeysTable","$addPasskeyBtn","$errors","init","_this","_callee","$container","_context","$","t0","browserSupportsWebAuthn","isUserVerifyingPlatformAuthenticatorAvailable","class","text","appendTo","replaceWith","initTable","addListener","_this2","find","ev","preventDefault","$button","currentTarget","deletePasskey","data","updateTable","html","createPasskey","_this3","_callee3","_context3","hasClass","addClass","cp","announce","elevatedSessionManager","requireElevatedSession","_callee2","_context2","startRegistration","Math","min","elevatedSessionDuration","removeClass","_this4","_callee4","_e$response","defaultName","credentialName","regResponse","_context4","sendActionRequest","displayError","browserName","platformName","prompt","t1","verifyRegistration","startRegistrationResponse","_this5","_callee5","_e$response2","_context5","JSON","stringify","displaySuccess","tableHtml","uid","_this6","_callee6","_e$response3","_context6","confirm","platform","userAgent","match"],"sourceRoot":""}